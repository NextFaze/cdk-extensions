// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AssetsServerConstruct should create required resources 1`] = `
Object {
  "Outputs": Object {
    "RestApiEndpoint0551178A": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "RestApi0C43BF4B",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "RestApiDeploymentStageprod3855DE66",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParametersfd2961d69a2852227775adc97db9157a74b871fe106ec29b0660b730ef83a5b4ArtifactHash172D5D65": Object {
      "Description": "Artifact hash for asset \\"fd2961d69a2852227775adc97db9157a74b871fe106ec29b0660b730ef83a5b4\\"",
      "Type": "String",
    },
    "AssetParametersfd2961d69a2852227775adc97db9157a74b871fe106ec29b0660b730ef83a5b4S3BucketB01E0F65": Object {
      "Description": "S3 bucket for asset \\"fd2961d69a2852227775adc97db9157a74b871fe106ec29b0660b730ef83a5b4\\"",
      "Type": "String",
    },
    "AssetParametersfd2961d69a2852227775adc97db9157a74b871fe106ec29b0660b730ef83a5b4S3VersionKeyDEF98E36": Object {
      "Description": "S3 key for asset version \\"fd2961d69a2852227775adc97db9157a74b871fe106ec29b0660b730ef83a5b4\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "AssetsServerAccessIdentity1F7D5DB0": Object {
      "Properties": Object {
        "CloudFrontOriginAccessIdentityConfig": Object {
          "Comment": "Auto generated access identity for assets.example.com",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
    "AssetsServerAssetsExampleComCnameRecord1D607E4C": Object {
      "Properties": Object {
        "HostedZoneId": Object {
          "Ref": "HostedZoneDB99F866",
        },
        "Name": "assets.example.com.Test.",
        "ResourceRecords": Array [
          Object {
            "Fn::GetAtt": Array [
              "AssetsServerDistribution52B7FC83",
              "DomainName",
            ],
          },
        ],
        "TTL": "1800",
        "Type": "CNAME",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "AssetsServerDistribution52B7FC83": Object {
      "Properties": Object {
        "DistributionConfig": Object {
          "Aliases": Array [
            "assets.example.com",
          ],
          "Comment": "Auto generated distribution for static assets",
          "DefaultCacheBehavior": Object {
            "Compress": true,
            "ForwardedValues": Object {
              "QueryString": false,
            },
            "TargetOriginId": "AssetsServerDistributionOrigin1AB45B792",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": Array [
            Object {
              "DomainName": Object {
                "Fn::GetAtt": Array [
                  "OriginBucketCA772B8F",
                  "RegionalDomainName",
                ],
              },
              "Id": "AssetsServerDistributionOrigin1AB45B792",
              "S3OriginConfig": Object {
                "OriginAccessIdentity": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "origin-access-identity/cloudfront/",
                      Object {
                        "Ref": "AssetsServerDistributionOrigin1S3Origin8D507F38",
                      },
                    ],
                  ],
                },
              },
            },
          ],
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "AssetsServerDistributionOrigin1S3Origin8D507F38": Object {
      "Properties": Object {
        "CloudFrontOriginAccessIdentityConfig": Object {
          "Comment": "Identity for AssetsServerDistributionOrigin1AB45B792",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
    "AssetsServerHandler13CB9CB6": Object {
      "DependsOn": Array [
        "AssetsServerHandlerServiceRoleDefaultPolicyD1EA8F1E",
        "AssetsServerHandlerServiceRole6D1CA530",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersfd2961d69a2852227775adc97db9157a74b871fe106ec29b0660b730ef83a5b4S3BucketB01E0F65",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersfd2961d69a2852227775adc97db9157a74b871fe106ec29b0660b730ef83a5b4S3VersionKeyDEF98E36",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersfd2961d69a2852227775adc97db9157a74b871fe106ec29b0660b730ef83a5b4S3VersionKeyDEF98E36",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "BUCKET_NAME": Object {
              "Ref": "OriginBucketCA772B8F",
            },
          },
        },
        "Handler": "index.assetsUploaderHandler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AssetsServerHandlerServiceRole6D1CA530",
            "Arn",
          ],
        },
        "Runtime": "nodejs10.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "AssetsServerHandlerServiceRole6D1CA530": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AssetsServerHandlerServiceRoleDefaultPolicyD1EA8F1E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "OriginBucketCA772B8F",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "OriginBucketCA772B8F",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AssetsServerHandlerServiceRoleDefaultPolicyD1EA8F1E",
        "Roles": Array [
          Object {
            "Ref": "AssetsServerHandlerServiceRole6D1CA530",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "HostedZoneDB99F866": Object {
      "Properties": Object {
        "Name": "Test.",
      },
      "Type": "AWS::Route53::HostedZone",
    },
    "OriginBucketCA772B8F": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "VersioningConfiguration": Object {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "OriginBucketPolicyFD67BA59": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "OriginBucketCA772B8F",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "CanonicalUser": Object {
                  "Fn::GetAtt": Array [
                    "AssetsServerAccessIdentity1F7D5DB0",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "OriginBucketCA772B8F",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "OriginBucketCA772B8F",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "CanonicalUser": Object {
                  "Fn::GetAtt": Array [
                    "AssetsServerDistributionOrigin1S3Origin8D507F38",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "OriginBucketCA772B8F",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "OriginBucketCA772B8F",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "RestApi0C43BF4B": Object {
      "Properties": Object {
        "Name": "RestApi",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "RestApiAccount7C83CF5A": Object {
      "DependsOn": Array [
        "RestApi0C43BF4B",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "RestApiCloudWatchRoleE3ED6605",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "RestApiCloudWatchRoleE3ED6605": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RestApiDeployment180EC5031d4916e4d081d28b5e7c70289ec223fb": Object {
      "DependsOn": Array [
        "RestApiuploadPOST0F5E2849",
        "RestApiuploadB3DA5A15",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "RestApiDeploymentStageprod3855DE66": Object {
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "RestApiDeployment180EC5031d4916e4d081d28b5e7c70289ec223fb",
        },
        "RestApiId": Object {
          "Ref": "RestApi0C43BF4B",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "RestApiuploadB3DA5A15": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "RestApi0C43BF4B",
            "RootResourceId",
          ],
        },
        "PathPart": "upload",
        "RestApiId": Object {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "RestApiuploadPOST0F5E2849": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "PassthroughBehavior": "NEVER",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "AssetsServerHandler13CB9CB6",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "RestApiuploadB3DA5A15",
        },
        "RestApiId": Object {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RestApiuploadPOSTApiPermissionRestApiPOSTupload2AF85572": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AssetsServerHandler13CB9CB6",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "RestApi0C43BF4B",
              },
              "/",
              Object {
                "Ref": "RestApiDeploymentStageprod3855DE66",
              },
              "/POST/upload",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RestApiuploadPOSTApiPermissionTestRestApiPOSTupload34D1DBC3": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AssetsServerHandler13CB9CB6",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "RestApi0C43BF4B",
              },
              "/test-invoke-stage/POST/upload",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
  },
}
`;
